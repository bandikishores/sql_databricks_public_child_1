{
  "id" : "env_uitesting_shared_useallmodel_1",
  "metainfo" : {
    "label" : "env_uitesting_shared_useallmodel_1",
    "autoLayout" : false,
    "staleState" : "none",
    "sourceSuggestions" : {
      "sources" : [ ]
    },
    "graphConfig" : {
      "modelConfig" : {
        "materialized" : "table",
        "full_refresh" : true,
        "pre-hook" : "",
        "post-hook" : ""
      },
      "userDefinedConfig" : {
        "vars" : {
          "v_int" : "22"
        }
      }
    }
  },
  "processes" : {
    "env_uitesting_shared_mid_model_1##cKpZPu50" : {
      "id" : "env_uitesting_shared_mid_model_1##cKpZPu50",
      "component" : "Model",
      "metadata" : {
        "label" : "env_uitesting_shared_mid_model_1",
        "x" : 120,
        "y" : 320,
        "phase" : 0
      },
      "properties" : {
        "table" : {
          "name" : "env_uitesting_shared_mid_model_1",
          "sourceType" : "Model"
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "UpsMsCit",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "kJbQRgROzlbR0UBZW5Eir$$StIfbB187FfdL1PmbPkXr" : {
      "id" : "kJbQRgROzlbR0UBZW5Eir$$StIfbB187FfdL1PmbPkXr",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_3",
        "slug" : "Join_3",
        "x" : 280,
        "y" : 860,
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.country_code!=in1.p_string"
          },
          "joinType" : "inner"
        } ],
        "expressions" : [ {
          "expression" : {
            "expression" : "in1.p_int"
          },
          "alias" : "p_int"
        }, {
          "expression" : {
            "expression" : "in1.p_string"
          },
          "alias" : "p_string"
        }, {
          "expression" : {
            "expression" : "in1.c_string"
          },
          "alias" : "c_string"
        }, {
          "expression" : {
            "expression" : "in1.c_int"
          },
          "alias" : "c_int"
        }, {
          "expression" : {
            "expression" : "in1.c_bigint"
          },
          "alias" : "c_bigint"
        }, {
          "expression" : {
            "expression" : "in1.c_smallint"
          },
          "alias" : "c_smallint"
        }, {
          "expression" : {
            "expression" : "in1.c_tinyint"
          },
          "alias" : "c_tinyint"
        }, {
          "expression" : {
            "expression" : "in1.c_float"
          },
          "alias" : "c_float"
        }, {
          "expression" : {
            "expression" : "in1.c_boolean"
          },
          "alias" : "c_boolean"
        }, {
          "expression" : {
            "expression" : "in1.c_array"
          },
          "alias" : "c_array"
        }, {
          "expression" : {
            "expression" : "in1.c_double"
          },
          "alias" : "c_double"
        }, {
          "expression" : {
            "expression" : "in1.c_struct"
          },
          "alias" : "c_struct"
        }, {
          "expression" : {
            "expression" : "in1.c_base_dependency_macro"
          },
          "alias" : "c_base_dependency_macro"
        }, {
          "expression" : {
            "expression" : "in1.c_current_project_macro"
          },
          "alias" : "c_current_project_macro"
        }, {
          "expression" : {
            "expression" : "in1.c_dbt_date"
          },
          "alias" : "c_dbt_date"
        } ],
        "activeTab" : "expressions",
        "columnsSelector" : [ "cUk_T7xnvsqLyvOj3C5z0$$CTUQyOiZzhUPdInZzp1xM##country_code", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##p_string", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##p_int", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##p_string", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_string", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_int", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_bigint", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_smallint", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_tinyint", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_float", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_boolean", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_array", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_double", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_struct", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_base_dependency_macro", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_current_project_macro", "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03##c_dbt_date" ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "cUk_T7xnvsqLyvOj3C5z0$$CTUQyOiZzhUPdInZzp1xM",
          "slug" : "in0"
        }, {
          "id" : "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "fEX-ho7g2c2INV1t4oY-L$$E0K-7RMYrhE6lrsn790q7",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "yQJKms_UfIX75H227kb-E" : {
      "id" : "yQJKms_UfIX75H227kb-E",
      "component" : "Model",
      "metadata" : {
        "label" : "model_with_only_seed_base",
        "slug" : "model_with_only_seed_base",
        "x" : 40,
        "y" : 760,
        "phase" : 0
      },
      "properties" : {
        "table" : {
          "name" : "model_with_only_seed_base",
          "sourceType" : "Model",
          "alias" : ""
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "TPhFiv8HppiP9I_3y4XsG",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "dXHoeZASTqSBq_1cFJfbK" : {
      "id" : "dXHoeZASTqSBq_1cFJfbK",
      "component" : "Model",
      "metadata" : {
        "label" : "env_uitesting_main_model_databricks_1",
        "slug" : "env_uitesting_main_model_databricks_1",
        "x" : 40,
        "y" : 960,
        "phase" : 0
      },
      "properties" : {
        "table" : {
          "name" : "env_uitesting_main_model_databricks_1",
          "sourceType" : "Model",
          "alias" : ""
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "BPvmaSnoDpekvhK8ds4ne",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "env_uitesting_shared_useallmodel_1##kzgWEh3l" : {
      "id" : "env_uitesting_shared_useallmodel_1##kzgWEh3l",
      "component" : "TargetModel",
      "metadata" : {
        "label" : "env_uitesting_shared_useallmodel_1",
        "x" : 880,
        "y" : 520,
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "customQueryDisabled" : true,
        "customQuery" : false,
        "incrementalEditorDisabled" : true,
        "query" : "SELECT * \n\nFROM Join_2\n",
        "incrementalKey" : false,
        "incremental" : {
          "expression" : "true"
        }
      },
      "ports" : {
        "inputs" : [ {
          "id" : "XrSaeZB5",
          "slug" : "Join_2"
        } ],
        "outputs" : [ {
          "id" : "cDsKgYEJ",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "9kZiJ_l2bbdU3pzlN-fuo$$uh7nhRxLKLtgW213h87PX" : {
      "id" : "9kZiJ_l2bbdU3pzlN-fuo$$uh7nhRxLKLtgW213h87PX",
      "component" : "OrderBy",
      "metadata" : {
        "label" : "OrderBy_1",
        "slug" : "OrderBy_1",
        "x" : 240,
        "y" : 460,
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "columnsSelector" : [ "AO-j_s-rzp_xeu3jjSsQ0$$BWaywn8U0_yNvve_3s-XT##first_name" ],
        "orders" : [ {
          "expression" : {
            "expression" : "first_name"
          },
          "sortType" : "asc",
          "nullsType" : "nulls first"
        } ]
      },
      "ports" : {
        "inputs" : [ {
          "id" : "AO-j_s-rzp_xeu3jjSsQ0$$BWaywn8U0_yNvve_3s-XT",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "id",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "first_name",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "last_name",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "yuOyR1eA5OJbEh6sqNxPY$$G-aLXKYIDw1IZsBcvyrBU",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "id",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "first_name",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "last_name",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "env_uitesting_shared_child_model_1##tC3Cn27x" : {
      "id" : "env_uitesting_shared_child_model_1##tC3Cn27x",
      "component" : "Model",
      "metadata" : {
        "label" : "env_uitesting_shared_child_model_1",
        "x" : 120,
        "y" : 120,
        "phase" : 0
      },
      "properties" : {
        "table" : {
          "name" : "env_uitesting_shared_child_model_1",
          "sourceType" : "Model"
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "Kdr8bPou",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "cepooBVXJGEspNmqj7j4I$$4NUJQY-3-6U4gstJeXiJb" : {
      "id" : "cepooBVXJGEspNmqj7j4I$$4NUJQY-3-6U4gstJeXiJb",
      "component" : "Reformat",
      "metadata" : {
        "label" : "AllStunningOne",
        "x" : 120,
        "y" : 620,
        "phase" : 0,
        "macroDependencies" : [ "SQL_DatabricksSharedBasic.qa_concat_function_main", "SQL_DatabricksParentProjectMain.qa_boolean_macro", "SQL_BaseGitDepProjectAllFinal.qa_concat_macro_base_column" ]
      },
      "properties" : {
        "columnsSelector" : [ "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_tinyint", "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_smallint", "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_int", "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_bigint", "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_float", "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_double", "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_string", "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_boolean", "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_array", "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi##c_struct" ],
        "expressions" : [ {
          "expression" : {
            "expression" : "(1 != 2) or (true != NULL) or (NULL != NULL) or (1 < 2) or (2 <= 2) or (2 <=> 2) or ((2 % 1.8) == 1) or (to_date('2009-07-30 04:17:52') < to_date('2009-07-30 04:17:52')) or (add_months('2016-08-31', 1) < add_months('2017-08-31', 3)) or (true and false) or array_contains(array_distinct(array(1, 2, 3)), 2) or array_contains(array_except(array(1, 2, 3), array(1, 3, 5)), 2) or array_contains(array_intersect(array(1, 2, 3), array(1, 3, 5)), 10) or (array_join(array('hello', NULL, 'world'), ' ', ',') LIKE '%hello%') or (array_max(array(1, 20, NULL, 3)) > 10) or (array_min(array(1, 20, NULL, 3)) > 20) or array_contains(array_remove(array(1, 2, 3, NULL, 3), 3), 3) or array_contains(array_repeat(5, 2), 6) or array_contains(array_union(array(1, 2, 3), array(1, 3, 5)), 10) or arrays_overlap(array(1, 2, 3), array(3, 4, 5)) or (10 BETWEEN 2 and 20) or contains('Spark SQL', 'Spark') or endswith('Spark SQL', 'SQL') or (EXISTS (array(1, 2, 3), \nx -> x % 2 == 0)) or array_contains(filter(array(1, 2, 3), \nx -> x % 2 == 1), 5) or array_contains(flatten(array(array(1, 2), array(3, 4))), 10) or forall(array(1, 2, 3), \nx -> x % 2 == 0) or ilike('Spark', '_Park') \nor regexp_like('%SystemDrive%\\\\Users\\\\John', '%SystemDrive%\\\\\\\\Users.*') or ('%SystemDrive%\\\\Users\\\\John' regexp '%SystemDrive%\\\\\\\\Users.*') or regexp('%SystemDrive%\\\\Users\\\\John','%SystemDrive%\\\\\\\\Users.*') \nor (1 IN (2, 3, 4)) or (isnan(CAST('NaN' AS double))) or isnotnull(1) or isnull(1) or array_contains(json_object_keys('{\"key\": \"value\"}'), 'key1') or like('Spark', '_park') or map_contains_key(map(1, 'a', 2, 'b'), 1) or map_contains_key(map_concat(map(1, 'a', 2, 'b'), map(3, 'c')), 4) or map_contains_key(map_filter(map(1, 0, 2, 2, 3, -1), \n(k, v) -> k > v), 3) or map_contains_key(map_from_arrays(array(1.0, 3.0), array('2', '4')), 2) or map_contains_key(map_from_entries(array(struct(1, 'a'), struct(2, 'b'))), 1) or array_contains(map_keys(map(1, 'a', 2, 'b')), 2) or array_contains(map_values(map(1, 'a', 2, 'b')), 'a') or map_contains_key(map_zip_with(map(1, 'a', 2, 'b'), map(1, 'x', 2, 'y'), \n(k, v1, v2) -> concat(v1, v2)), 1) or (named_struct('a', 1, 'b', 2) IN (named_struct('a', 1, 'b', 1), named_struct('a', 1, 'b', 3))) or (NOT true) or array_contains(regexp_extract_all('100-200, 300-400', '(\\\\d+)-(\\\\d+)', 1), '100') or array_contains(sequence(1, 5), 4) or array_contains(shuffle(array(1, 20, 3, 5)), 10) or array_contains(slice(array(1, 2, 3, 4), 2, 2), 4) or array_contains(sort_array(array('b', 'd', NULL, 'c', 'a'), true), 'b') or array_contains(split('oneAtwoBthreeC', '[ABC]'), 'one') or startswith('Spark SQL', 'Spark') or map_contains_key(str_to_map('a:1,b:2,c:3', ',', ':'), 'a') or array_contains(transform(array(1, 2, 3), \nx -> x + 1), 1) or map_contains_key(transform_keys(map_from_arrays(array(1, 2, 3), array(1, 2, 3)), \n(k, v) -> k + 1), 1) or map_contains_key(transform_values(map_from_arrays(array(1, 2, 3), array(1, 2, 3)), \n(k, v) -> v + 1), 2) or array_contains(xpath('<a><b>b1</b><b>b2</b><b>b3</b><c>c1</c><c>c2</c></a>', 'a/b/text()'), 'a') or xpath_boolean('<a><b>1</b></a>', 'a/b') or array_contains(zip_with(array(1, 2), array(3, 4), \n(x, y) -> x + y), 1)"
          },
          "alias" : "c_bool_expr"
        }, {
          "expression" : {
            "expression" : "concat(\naes_decrypt(unhex('83F16B2AA704794132802D248E6BFD4E380078182D1544813898AC97E709B28A94'), '0000111122223333'),\nbase64(aes_encrypt('Spark SQL', '1234567890abcdef', 'ECB', 'PKCS')),\nbin(13),\nbtrim('    SparkSQL   '),\nchar(65),\nchr(65),\nconcat('Spark', 'SQL'),\nconcat_ws(' ', 'Spark', 'SQL'),\ncrc32('Spark'),\ncurrent_catalog(),\ncurrent_database(),\ncurrent_date(),\ncurrent_timestamp(),\ncurrent_timezone(),\ncurrent_user(),\ndate_add('2016-07-30', 1),\ndate_sub('2016-07-30', 1),\ndate_format('2016-04-08', 'y'),\ndate_from_unix_date(1),\ndate_part('YEAR', TIMESTAMP '2019-08-12 01:00:00.123456'),\ndate_part('MONTH', INTERVAL '2021-11' YEAR TO MONTH),\ndate_part('MINUTE', INTERVAL '123 23:55:59.002001' DAY TO SECOND),\ndate_trunc('HOUR', '2015-03-05T09:32:05.359'),\ndate_trunc('DD', '2015-03-05T09:32:05.359'),\ndatediff('2009-07-31', '2009-07-30'),\ndecode(encode('abc', 'utf-8'), 'utf-8'),\ne(),\nelt(1, 'scala', 'java'),\nformat_number(12332.123456, '##################.###'),\nformat_string('Hello World %d %s', 100, 'days'),\ncast(from_csv('1, 0.8', 'a INT, b DOUBLE') as string),\ncast(from_json('{\"teacher\": \"Alice\", \"student\": [{\"name\": \"Bob\", \"rank\": 1}, {\"name\": \"Charlie\", \"rank\": 2}]}', 'STRUCT<teacher: STRING, student: ARRAY<STRUCT<name: STRING, rank: INT>>>') as string),\ncast(from_unixtime(0, 'yyyy-MM-dd HH:mm:ss') as string),\ncast(from_utc_timestamp('2016-08-31', 'Asia/Seoul') as string),\ncast(get_json_object('{\"a\":\"b\"}', '$.a') as string),\nhash('Spark', array(123), 2),\nhex(17),\ncast(hour('2009-07-30 12:58:59') as string),\ncast(hypot(3, 4) as string),\ncast(ilike('Spark', '_Park') as string),\ncast(initcap('sPark sql') as string),\ncast(last_day('2009-01-12') as string),\ncast(lcase('SparkSql') as string),\ncast(if(1 < 2, 'a', 'b') as string),\ncast(ifnull(NULL, array('2')) as string),\nleft('Spark SQL', 3),\nlower('SparkSql'),\nlpad('hi', 5, '??'),\nltrim('    SparkSQL   '),\ncast(make_date(2013, 7, 15) as string),\ncast(make_dt_interval(1, 12, 30, 01.001001) as string),\ncast(make_interval(100, 11, 1, 1, 12, 30, 01.001001) as string),\ncast(make_timestamp(2019, 6, 30, 23, 59, 60) as string),\ncast(make_ym_interval(1, 2) as string),\nmd5('Spark'),\nnext_day('2015-01-14', 'TU'),\nnow(),\nnullif(2, 2),\nnvl(NULL, 'hello'),\ncast(overlay('Spark SQL' PLACING '_' FROM 6) as string),\ncast(parse_url('http://spark.apache.org/path?query=1', 'HOST') as string),\nprintf('Hello World %d %s', 100, 'days'),\ncast(regexp_extract('100-200', '(\\\\d+)-(\\\\d+)', 1) as string),\ncast(regexp_replace('100-200', '(\\\\d+)', 'num') as string),\nrepeat('123', 2),\nreplace('ABCabc', 'abc', 'DEF'),\nreverse('Spark SQL'),\nright('Spark SQL', 3),\nrpad('hi', 5, '??'),\nrtrim('    SparkSQL   '),\ncast(schema_of_json('[{\"col\":0}]') as string),\nsha('Spark'),\nsha1('Spark'),\nsha2('Spark', 256),\nconcat(space(2), '1'),\nsplit_part('11.12.13', '.', 3),\nsubstr('Spark SQL', 5),\nsubstring('Spark SQL', 5),\nsubstring_index('www.apache.org', '.', 2),\ntimestamp_micros(1230219000123123),\ntimestamp_millis(1230219000123),\ntimestamp_seconds(1230219000.123),\nto_csv(named_struct('a', 1, 'b', 2)),\nto_date('2009-07-30 04:17:52'),\nto_timestamp('2016-12-31 00:12:00'),\nto_unix_timestamp('2016-04-08', 'yyyy-MM-dd'),\nto_utc_timestamp('2016-08-31', 'Asia/Seoul'),\ntranslate('AaBbCc', 'abc', '123'),\ntrunc('2019-08-04', 'week'),\ntry_to_binary('abc', 'utf-8'),\ntry_to_number('454', '999'),\ntypeof(1),\nucase('SparkSql'),\nunbase64('U3BhcmsgU1FM'),\ndecode(unhex('537061726B2053514C'), 'UTF-8'),\nunix_date(DATE(\"1970-01-02\")),\nunix_micros(TIMESTAMP('1970-01-01 00:00:01Z')),\nunix_millis(TIMESTAMP('1970-01-01 00:00:01Z')),\nunix_seconds(TIMESTAMP('1970-01-01 00:00:01Z')),\nunix_timestamp('2016-04-08', 'yyyy-MM-dd'),\nupper('SparkSql'),\nuuid(),\nxpath_string('<a><b>b</b><c>cc</c></a>','a/c'),\nxxhash64('Spark', array(123), 2),\nyear('2016-07-30')\n)"
          },
          "alias" : "c_concat_expr"
        }, {
          "expression" : {
            "expression" : "(2 % 1.8) + (MOD(2, 1.8)) + (3 & 5) + (2 * 3) + (5 + 10) - (100 + 45) + (3 / 2) + (3 ^ 5) + abs(-1) + acos(1) + acosh(1) + array_position(array(3, 2, 1), 1) + array_size(array('b', 'd', 'c', 'a')) + ascii(2) + asin(0) + asinh(0) + atan(0) + atan2(0, 0) + atanh(0) + bit_count(0) + bit_get(11, 0) + bit_length('Spark SQL') + bround(25, -1) + cardinality(array('b', 'd', 'c', 'a')) + cardinality(map('a', 1, 'b', 2)) + CAST('10' AS int) + cbrt(27.0) + ceil(3.1411, 3) + ceiling(3.1411, 3) + char_length('Spark SQL ') + coalesce(NULL, 1, NULL) + conv('100', 2, 10) + cos(0) + cosh(0) + cot(1) + csc(1) + day('2009-07-30') + dayofmonth('2009-07-30') + dayofweek('2009-07-30') + dayofyear('2016-04-09') + degrees(3.141592653589793) + element_at(array(1, 2, 3), 2) + exp(0) + expm1(0) + EXTRACT(SECONDS FROM TIMESTAMP'2019-10-01 00:00:01.000001') + EXTRACT(MINUTE FROM INTERVAL '123 23:55:59.002001' DAY TO SECOND) + factorial(2) + find_in_set('ab', 'abc,b,ab,c,def') + floor(-0.1) + getbit(11, 0) + greatest(10, 9, 2, 4, 3) + instr('SparkSQL', 'SQL') + json_array_length('[1,2,3,{\"f1\":1,\"f2\":[5,6]},4]') + least(10, 9, 2, 4, 3) + length('Spark SQL ') + levenshtein('kitten', 'sitting') + ln(10) + locate('bar', 'foobarbar') + log(10, 100) + log10(10) + log1p(0) + log2(2) + minute('2009-07-30 12:58:59') + (2 % 1.8) + month('2016-07-30') + months_between('1997-02-28 10:30:00', '1996-10-30', false) + nanvl(CAST('NaN' AS double), 123) + negative(100) + nvl2(NULL, 2, 1) + octet_length('Spark SQL') + pi() + pmod(10, 3) + position('bar', 'foobarbar') + positive(1) + pow(2, 3) + power(2, 3) + quarter('2016-08-31') + radians(180) + rand() + randn() + random() + rint(12.3456) + round(2.5, 0) + sec(0) + second('2009-07-30 12:58:59') + shiftleft(2, 1) + shiftright(4, 1) + shiftrightunsigned(4, 1) + sign(40) + signum(40) + sin(0) + sinh(0) + size(array('b', 'd', 'c', 'a')) + sqrt(4) + tan(0) + tanh(0) + to_number('454.00', '000.00') + try_add(1, 2) + try_divide(2L, 2L) + try_element_at(array(1, 2, 3), 2) + try_multiply(2, 3) + try_subtract(2, 1) + weekday('2009-07-30') + weekofyear('2008-02-20') + (CASE\n  WHEN 1 > 0\n    THEN 1\n  WHEN 2 > 0\n    THEN 2.0\n  ELSE 1.2\nEND) + width_bucket(5.3, 0.2, 10.6, 5) + xpath_double('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + xpath_int('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + xpath_long('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + xpath_number('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + xpath_short('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + (~ 0)"
          },
          "alias" : "c_add_expr"
        }, {
          "expression" : {
            "expression" : "c_tinyint"
          },
          "alias" : "c_tinyint"
        }, {
          "expression" : {
            "expression" : "c_smallint"
          },
          "alias" : "c_smallint"
        }, {
          "expression" : {
            "expression" : "c_int"
          },
          "alias" : "c_int"
        }, {
          "expression" : {
            "expression" : "c_bigint"
          },
          "alias" : "c_bigint"
        }, {
          "expression" : {
            "expression" : "c_float"
          },
          "alias" : "c_float"
        }, {
          "expression" : {
            "expression" : "c_double"
          },
          "alias" : "c_double"
        }, {
          "expression" : {
            "expression" : "c_string"
          },
          "alias" : "c_string"
        }, {
          "expression" : {
            "expression" : "c_boolean"
          },
          "alias" : "c_boolean"
        }, {
          "expression" : {
            "expression" : "c_array"
          },
          "alias" : "c_array"
        }, {
          "expression" : {
            "expression" : "c_struct"
          },
          "alias" : "c_struct"
        }, {
          "expression" : {
            "expression" : "{{ SQL_DatabricksSharedBasic.qa_concat_function_main('c_string', 'c_boolean') }}"
          },
          "alias" : "c_macro"
        }, {
          "rowType" : "ifGroup",
          "children" : [ {
            "rowType" : "if",
            "condition" : {
              "expression" : "v_int > 20"
            },
            "children" : [ {
              "expression" : {
                "expression" : "concat(c_string, c_float)"
              },
              "alias" : "c_if"
            } ]
          }, {
            "rowType" : "elseIf",
            "condition" : {
              "expression" : "var('v_project_dict')['b'] == 'hello'"
            },
            "children" : [ {
              "expression" : {
                "expression" : "concat(c_string, c_int)"
              },
              "alias" : "c_if"
            } ]
          }, {
            "rowType" : "else",
            "children" : [ {
              "expression" : {
                "expression" : "concat(c_string, c_bigint)"
              },
              "alias" : "c_if"
            } ]
          } ]
        }, {
          "rowType" : "for",
          "variable" : {
            "expression" : "c_i"
          },
          "iterable" : {
            "expression" : "range(0, 5)"
          },
          "children" : [ {
            "expression" : {
              "expression" : "concat(c_string, {{c_i}})"
            },
            "alias" : "cfor_col_{{c_i}}"
          } ]
        }, {
          "expression" : {
            "expression" : "{{ SQL_DatabricksParentProjectMain.qa_boolean_macro('c_string') }}"
          },
          "alias" : "c_databricks_project_main"
        }, {
          "expression" : {
            "expression" : "{{ SQL_BaseGitDepProjectAllFinal.qa_concat_macro_base_column('c_string') }}"
          },
          "alias" : "c_base_project"
        }, {
          "expression" : {
            "expression" : "concat('{{ dbt_utils.pretty_time() }}', '{{ dbt_utils.pretty_log_format(\"my pretty message\") }}')"
          },
          "alias" : "c_dbt_utils_functions"
        } ]
      },
      "ports" : {
        "inputs" : [ {
          "id" : "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            } ]
          },
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "5Y8e5o0RoTp9iaomzi2GT$$Q7HaM2C4rsikGkjftSQZ1",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_bool_expr",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_concat_expr",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_add_expr",
              "dataType" : {
                "type" : "Double"
              }
            }, {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            }, {
              "name" : "c_macro",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_if",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_0",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_1",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_2",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_3",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_4",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_databricks_project_main",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_base_project",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_dbt_utils_functions",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "Join_1##DiWerIJy" : {
      "id" : "Join_1##DiWerIJy",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_1",
        "x" : 360,
        "y" : 220,
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.c_smallint != in1.c_int"
          },
          "joinType" : "inner"
        } ],
        "expressions" : [ {
          "expression" : {
            "expression" : "in0.c_tinyint"
          },
          "alias" : "c_tinyint"
        }, {
          "expression" : {
            "expression" : "in0.c_smallint"
          },
          "alias" : "c_smallint"
        }, {
          "expression" : {
            "expression" : "in1.c_int"
          },
          "alias" : "c_int"
        }, {
          "expression" : {
            "expression" : "in0.c_bigint"
          },
          "alias" : "c_bigint"
        }, {
          "expression" : {
            "expression" : "in0.c_float"
          },
          "alias" : "c_float"
        }, {
          "expression" : {
            "expression" : "in0.c_double"
          },
          "alias" : "c_double"
        }, {
          "expression" : {
            "expression" : "in0.c_string"
          },
          "alias" : "c_string"
        }, {
          "expression" : {
            "expression" : "in0.c_boolean"
          },
          "alias" : "c_boolean"
        }, {
          "expression" : {
            "expression" : "in0.c_array"
          },
          "alias" : "c_array"
        }, {
          "expression" : {
            "expression" : "in0.c_struct"
          },
          "alias" : "c_struct"
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ "rR3ZxNdH##c_smallint", "BzdfYH6m##c_int", "rR3ZxNdH##c_tinyint", "rR3ZxNdH##c_smallint", "BzdfYH6m##c_int", "rR3ZxNdH##c_bigint", "rR3ZxNdH##c_float", "rR3ZxNdH##c_double", "rR3ZxNdH##c_string", "rR3ZxNdH##c_boolean", "rR3ZxNdH##c_array", "rR3ZxNdH##c_struct" ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "rR3ZxNdH",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            } ]
          },
          "slug" : "in0"
        }, {
          "id" : "BzdfYH6m",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            } ]
          },
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "nin0QglZ",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "XnpZJ_F8wFpOT9W0BrAVM" : {
      "id" : "XnpZJ_F8wFpOT9W0BrAVM",
      "component" : "Seed",
      "metadata" : {
        "label" : "raw_customers",
        "slug" : "raw_customers",
        "x" : -340,
        "y" : 440,
        "phase" : 0
      },
      "properties" : {
        "table" : {
          "name" : "raw_customers",
          "sourceType" : "Seed",
          "alias" : ""
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "pdZarttcb3BWYnKxWOXrh",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "id",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "first_name",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "last_name",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "Join_2##Zzaqyd20" : {
      "id" : "Join_2##Zzaqyd20",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_2",
        "x" : 620,
        "y" : 520,
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.c_double = in1.c_double"
          },
          "joinType" : "inner"
        }, {
          "alias" : "in2",
          "expression" : {
            "expression" : "in1.c_string != in2.first_name"
          },
          "joinType" : "inner"
        }, {
          "alias" : "in3",
          "expression" : {
            "expression" : "in2.first_name != in3.c_string"
          },
          "joinType" : "inner"
        } ],
        "expressions" : [ {
          "expression" : {
            "expression" : "in0.c_tinyint"
          },
          "alias" : "c_tinyint"
        }, {
          "expression" : {
            "expression" : "in0.c_smallint"
          },
          "alias" : "c_smallint"
        }, {
          "expression" : {
            "expression" : "in0.c_int"
          },
          "alias" : "c_int"
        }, {
          "expression" : {
            "expression" : "in0.c_bigint"
          },
          "alias" : "c_bigint"
        }, {
          "expression" : {
            "expression" : "in0.c_float"
          },
          "alias" : "c_float"
        }, {
          "expression" : {
            "expression" : "in0.c_double"
          },
          "alias" : "c_double"
        }, {
          "expression" : {
            "expression" : "in0.c_string"
          },
          "alias" : "c_string"
        }, {
          "expression" : {
            "expression" : "in0.c_boolean"
          },
          "alias" : "c_boolean"
        }, {
          "expression" : {
            "expression" : "in0.c_array"
          },
          "alias" : "c_array"
        }, {
          "expression" : {
            "expression" : "in0.c_struct"
          },
          "alias" : "c_struct"
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ "swuh1DM0##c_double", "QvphnSnH##c_double", "QvphnSnH##c_string", "6YdYkQYG0swz8geUN3OWB$$nGPIUuHmk3PBiuC4htD3M##first_name", "2BN7CBpfgEq81e6eyHq-x$$V87AresgYY0Nc0MW0O9Z-##c_string", "swuh1DM0##c_tinyint", "swuh1DM0##c_smallint", "swuh1DM0##c_int", "swuh1DM0##c_bigint", "swuh1DM0##c_float", "swuh1DM0##c_double", "swuh1DM0##c_string", "swuh1DM0##c_boolean", "swuh1DM0##c_array", "swuh1DM0##c_struct" ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "swuh1DM0",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            } ]
          },
          "slug" : "in0"
        }, {
          "id" : "QvphnSnH",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_bool_expr",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_concat_expr",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_add_expr",
              "dataType" : {
                "type" : "Double"
              }
            }, {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_macro",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_if",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_0",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_1",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_2",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_3",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_4",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_databricks_project_main",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_base_project",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_dbt_utils_functions",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "in1"
        }, {
          "id" : "6YdYkQYG0swz8geUN3OWB$$nGPIUuHmk3PBiuC4htD3M",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "id",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "first_name",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "last_name",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "in2"
        }, {
          "id" : "2BN7CBpfgEq81e6eyHq-x$$V87AresgYY0Nc0MW0O9Z-",
          "slug" : "in3"
        } ],
        "outputs" : [ {
          "id" : "RXqEoA3D",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "env_uitesting_shared_parent_model_1##HgmLP5O1" : {
      "id" : "env_uitesting_shared_parent_model_1##HgmLP5O1",
      "component" : "Model",
      "metadata" : {
        "label" : "env_uitesting_shared_parent_model_1",
        "x" : -60,
        "y" : 620,
        "phase" : 0
      },
      "properties" : {
        "table" : {
          "name" : "env_uitesting_shared_parent_model_1",
          "sourceType" : "Model"
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "w5JgMePx",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "YyliIcFl566jX-XCwBcGs$$urLhRDnI5c3ZgO8Uq9OAq" : {
      "id" : "YyliIcFl566jX-XCwBcGs$$urLhRDnI5c3ZgO8Uq9OAq",
      "component" : "Aggregate",
      "metadata" : {
        "label" : "Aggregate_1",
        "slug" : "Aggregate_1",
        "x" : 280,
        "y" : 620,
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "aggregate" : [ {
          "expression" : {
            "expression" : "any_value(c_bool_expr)"
          },
          "alias" : "c_bool_expr"
        }, {
          "expression" : {
            "expression" : "any_value(c_concat_expr)"
          },
          "alias" : "c_concat_expr"
        }, {
          "expression" : {
            "expression" : "any_value(c_add_expr)"
          },
          "alias" : "c_add_expr"
        }, {
          "expression" : {
            "expression" : "any_value(c_tinyint)"
          },
          "alias" : "c_tinyint"
        }, {
          "expression" : {
            "expression" : "any_value(c_smallint)"
          },
          "alias" : "c_smallint"
        }, {
          "expression" : {
            "expression" : "any_value(c_int)"
          },
          "alias" : "c_int"
        }, {
          "expression" : {
            "expression" : "any_value(c_bigint)"
          },
          "alias" : "c_bigint"
        }, {
          "expression" : {
            "expression" : "any_value(c_float)"
          },
          "alias" : "c_float"
        }, {
          "expression" : {
            "expression" : "any_value(c_double)"
          },
          "alias" : "c_double"
        }, {
          "expression" : {
            "expression" : "any_value(c_string)"
          },
          "alias" : "c_string"
        }, {
          "expression" : {
            "expression" : "any_value(c_boolean)"
          },
          "alias" : "c_boolean"
        }, {
          "expression" : {
            "expression" : "any_value(c_macro)"
          },
          "alias" : "c_macro"
        }, {
          "expression" : {
            "expression" : "any_value(c_if)"
          },
          "alias" : "c_if"
        }, {
          "expression" : {
            "expression" : "any_value(cfor_col_0)"
          },
          "alias" : "cfor_col_0"
        }, {
          "expression" : {
            "expression" : "any_value(cfor_col_1)"
          },
          "alias" : "cfor_col_1"
        }, {
          "expression" : {
            "expression" : "any_value(cfor_col_2)"
          },
          "alias" : "cfor_col_2"
        }, {
          "expression" : {
            "expression" : "any_value(cfor_col_3)"
          },
          "alias" : "cfor_col_3"
        }, {
          "expression" : {
            "expression" : "any_value(cfor_col_4)"
          },
          "alias" : "cfor_col_4"
        }, {
          "expression" : {
            "expression" : "any_value(c_databricks_project_main)"
          },
          "alias" : "c_databricks_project_main"
        }, {
          "expression" : {
            "expression" : "any_value(c_base_project)"
          },
          "alias" : "c_base_project"
        }, {
          "expression" : {
            "expression" : "any_value(c_dbt_utils_functions)"
          },
          "alias" : "c_dbt_utils_functions"
        } ],
        "allowSelection" : true,
        "condition" : {
          "expression" : ""
        },
        "activeTab" : "aggregate",
        "columnsSelector" : [ "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_boolean", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_bool_expr", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_concat_expr", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_add_expr", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_tinyint", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_smallint", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_int", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_bigint", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_float", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_double", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_string", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_macro", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_if", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##cfor_col_0", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##cfor_col_1", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##cfor_col_2", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##cfor_col_3", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##cfor_col_4", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_databricks_project_main", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_base_project", "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD##c_dbt_utils_functions" ],
        "groupBy" : [ {
          "expression" : {
            "expression" : "c_boolean"
          }
        } ]
      },
      "ports" : {
        "inputs" : [ {
          "id" : "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_bool_expr",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_concat_expr",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_add_expr",
              "dataType" : {
                "type" : "Double"
              }
            }, {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_array",
              "dataType" : {
                "type" : "Array",
                "dataType" : {
                  "type" : "String"
                }
              }
            }, {
              "name" : "c_struct",
              "dataType" : {
                "type" : "Struct",
                "fields" : [ {
                  "name" : "city",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "state",
                  "dataType" : {
                    "type" : "String"
                  }
                }, {
                  "name" : "pin",
                  "dataType" : {
                    "type" : "Bigint"
                  }
                } ]
              }
            }, {
              "name" : "c_macro",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_if",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_0",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_1",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_2",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_3",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_4",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_databricks_project_main",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_base_project",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_dbt_utils_functions",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "bhPJiWosZULxWPn3w40R5$$9ExHOdzZVshPaqBnvbEy2",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "c_bool_expr",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_concat_expr",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_add_expr",
              "dataType" : {
                "type" : "Double"
              }
            }, {
              "name" : "c_tinyint",
              "dataType" : {
                "type" : "TinyInt"
              }
            }, {
              "name" : "c_smallint",
              "dataType" : {
                "type" : "SmallInt"
              }
            }, {
              "name" : "c_int",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "c_bigint",
              "dataType" : {
                "type" : "Bigint"
              }
            }, {
              "name" : "c_float",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_double",
              "dataType" : {
                "type" : "Float"
              }
            }, {
              "name" : "c_string",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_boolean",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_macro",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_if",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_0",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_1",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_2",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_3",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "cfor_col_4",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_databricks_project_main",
              "dataType" : {
                "type" : "Boolean"
              }
            }, {
              "name" : "c_base_project",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "c_dbt_utils_functions",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "kTKtvH9ZjN62lfpsED6vQ$$eMrC1xMbezS63OK9w6g6b" : {
      "id" : "kTKtvH9ZjN62lfpsED6vQ$$eMrC1xMbezS63OK9w6g6b",
      "component" : "Limit",
      "metadata" : {
        "label" : "Limit_1",
        "slug" : "Limit_1",
        "x" : 80,
        "y" : 460,
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "limit" : {
          "expression" : "100"
        }
      },
      "ports" : {
        "inputs" : [ {
          "id" : "sRqPFIrIMHpwzEVqgUwSL$$HvB8MW5S4t5tkxV5HDJ0P",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "id",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "first_name",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "last_name",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "hBAegbSLyQtQfWcekKhwm$$vzJKMKQtFt-arfeywqnYq",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "id",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "first_name",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "last_name",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "oS78vsjrNx8nU0PiqqGZu$$CyNhTOTlpIbKg9WxxV_iF" : {
      "id" : "oS78vsjrNx8nU0PiqqGZu$$CyNhTOTlpIbKg9WxxV_iF",
      "component" : "Filter",
      "metadata" : {
        "label" : "Filter_1",
        "slug" : "Filter_1",
        "x" : -80,
        "y" : 460,
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "columnsSelector" : [ ],
        "condition" : {
          "expression" : "true"
        }
      },
      "ports" : {
        "inputs" : [ {
          "id" : "aWylstS47sKob4h7xMcxZ$$vzfA3brufyW7QRljgaP7v",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "id",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "first_name",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "last_name",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "qzdlvehfgjq0yguFVEKdp$$nUS--NJIXfkMdblN6rK5a",
          "schema" : {
            "providerType" : "Databricks",
            "fields" : [ {
              "name" : "id",
              "dataType" : {
                "type" : "Integer"
              }
            }, {
              "name" : "first_name",
              "dataType" : {
                "type" : "String"
              }
            }, {
              "name" : "last_name",
              "dataType" : {
                "type" : "String"
              }
            } ]
          },
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    }
  },
  "connections" : [ {
    "id" : "lqsOhxYv",
    "source" : "env_uitesting_shared_child_model_1##tC3Cn27x",
    "sourcePort" : "Kdr8bPou",
    "target" : "Join_1##DiWerIJy",
    "targetPort" : "rR3ZxNdH"
  }, {
    "id" : "cbse7oAV",
    "source" : "env_uitesting_shared_mid_model_1##cKpZPu50",
    "sourcePort" : "UpsMsCit",
    "target" : "Join_1##DiWerIJy",
    "targetPort" : "BzdfYH6m"
  }, {
    "id" : "R14egYUk",
    "source" : "Join_1##DiWerIJy",
    "sourcePort" : "nin0QglZ",
    "target" : "Join_2##Zzaqyd20",
    "targetPort" : "swuh1DM0"
  }, {
    "id" : "uRIigUdj",
    "source" : "Join_2##Zzaqyd20",
    "sourcePort" : "RXqEoA3D",
    "target" : "env_uitesting_shared_useallmodel_1##kzgWEh3l",
    "targetPort" : "XrSaeZB5"
  }, {
    "id" : "qUWhWJBtOiY6kkQzgcuYV$$ePt6EhAsBFcq6DLhDPrlL",
    "source" : "env_uitesting_shared_parent_model_1##HgmLP5O1",
    "sourcePort" : "w5JgMePx",
    "target" : "cepooBVXJGEspNmqj7j4I$$4NUJQY-3-6U4gstJeXiJb",
    "targetPort" : "c_MlT2psvl5SG-Bl87jYu$$TwhuW0vg751YcTAdNaWTi"
  }, {
    "id" : "jFIhfe6mSGMY5q_frOoBi$$7nNnBEW96krFAzMbqjZnS",
    "source" : "yQJKms_UfIX75H227kb-E",
    "sourcePort" : "TPhFiv8HppiP9I_3y4XsG",
    "target" : "kJbQRgROzlbR0UBZW5Eir$$StIfbB187FfdL1PmbPkXr",
    "targetPort" : "cUk_T7xnvsqLyvOj3C5z0$$CTUQyOiZzhUPdInZzp1xM"
  }, {
    "id" : "M2-z3dq4Ob1oj95a0kAZU",
    "source" : "dXHoeZASTqSBq_1cFJfbK",
    "sourcePort" : "BPvmaSnoDpekvhK8ds4ne",
    "target" : "kJbQRgROzlbR0UBZW5Eir$$StIfbB187FfdL1PmbPkXr",
    "targetPort" : "HBp96XmvTRfJZdX64LqoR$$YOZkCZDms9dZrbhiOPh03"
  }, {
    "id" : "ziCSXscrxLVjImIlouWX_",
    "source" : "kJbQRgROzlbR0UBZW5Eir$$StIfbB187FfdL1PmbPkXr",
    "sourcePort" : "fEX-ho7g2c2INV1t4oY-L$$E0K-7RMYrhE6lrsn790q7",
    "target" : "Join_2##Zzaqyd20",
    "targetPort" : "2BN7CBpfgEq81e6eyHq-x$$V87AresgYY0Nc0MW0O9Z-"
  }, {
    "id" : "gEJhEVSdvt90NOKyfbP77$$OQ7nUwhc52Rw29iQ8AP99",
    "source" : "XnpZJ_F8wFpOT9W0BrAVM",
    "sourcePort" : "pdZarttcb3BWYnKxWOXrh",
    "target" : "oS78vsjrNx8nU0PiqqGZu$$CyNhTOTlpIbKg9WxxV_iF",
    "targetPort" : "aWylstS47sKob4h7xMcxZ$$vzfA3brufyW7QRljgaP7v"
  }, {
    "id" : "hrtxcNWFMgEwbBQHQqUF0$$0XsUYBVWST9qWWzRa7Coc",
    "source" : "oS78vsjrNx8nU0PiqqGZu$$CyNhTOTlpIbKg9WxxV_iF",
    "sourcePort" : "qzdlvehfgjq0yguFVEKdp$$nUS--NJIXfkMdblN6rK5a",
    "target" : "kTKtvH9ZjN62lfpsED6vQ$$eMrC1xMbezS63OK9w6g6b",
    "targetPort" : "sRqPFIrIMHpwzEVqgUwSL$$HvB8MW5S4t5tkxV5HDJ0P"
  }, {
    "id" : "DJvSFEzRaimh7vcjd7a8B$$fP0iDmJYy1IwG3eox3fae",
    "source" : "kTKtvH9ZjN62lfpsED6vQ$$eMrC1xMbezS63OK9w6g6b",
    "sourcePort" : "hBAegbSLyQtQfWcekKhwm$$vzJKMKQtFt-arfeywqnYq",
    "target" : "9kZiJ_l2bbdU3pzlN-fuo$$uh7nhRxLKLtgW213h87PX",
    "targetPort" : "AO-j_s-rzp_xeu3jjSsQ0$$BWaywn8U0_yNvve_3s-XT"
  }, {
    "id" : "kstxVUt2Bh9JmSXQ7CBYU$$sJXL9-4v2HAd927KLiRp0",
    "source" : "cepooBVXJGEspNmqj7j4I$$4NUJQY-3-6U4gstJeXiJb",
    "sourcePort" : "5Y8e5o0RoTp9iaomzi2GT$$Q7HaM2C4rsikGkjftSQZ1",
    "target" : "YyliIcFl566jX-XCwBcGs$$urLhRDnI5c3ZgO8Uq9OAq",
    "targetPort" : "sXpmlHm4YsbACk0Sv43MH$$XaACIPM1F4JKLty8KlTUD"
  }, {
    "id" : "DK5g3iNROHR-2PzYHi5nK",
    "source" : "YyliIcFl566jX-XCwBcGs$$urLhRDnI5c3ZgO8Uq9OAq",
    "sourcePort" : "bhPJiWosZULxWPn3w40R5$$9ExHOdzZVshPaqBnvbEy2",
    "target" : "Join_2##Zzaqyd20",
    "targetPort" : "QvphnSnH"
  }, {
    "id" : "ukzq3DmTmNa1btcgVHChx",
    "source" : "9kZiJ_l2bbdU3pzlN-fuo$$uh7nhRxLKLtgW213h87PX",
    "sourcePort" : "yuOyR1eA5OJbEh6sqNxPY$$G-aLXKYIDw1IZsBcvyrBU",
    "target" : "Join_2##Zzaqyd20",
    "targetPort" : "6YdYkQYG0swz8geUN3OWB$$nGPIUuHmk3PBiuC4htD3M"
  } ],
  "component" : "Model"
}